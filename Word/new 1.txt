变量
变量是一个很重要很基础的概念，我们在编程的过程中会经常使用到。
变量的概念基本上和初中数学方程式中的变量是一致的，都是可变的。
只是在计算机程序中，变量不仅可以是数字，还可以是任意数据类型。

变量在程序中就是用一个变量名表示，变量名有它自己的命名规则，不是随便命名的，必须是大小写英文、数字和_（注意这是下划线符号）的组合，且不能用数字开头。
以下是正确的变量命名：
a_1, a1, Alex_, _a, a11111
以下是错误的变量命名：
1a, 111, a_#, @#$a1
当然，我们更推荐在命名变量的时候，使用更有意义的命名，更符合你使用场景的命名。
比如你这个变量是用来代表汽车的，你就可以命名为car或car_1
比如你这个变量是用来代表背包的，你就可以命名为bag或bag_2
在Python中，变量实际代表的值可以是任何数据类型，可以是先是数字类型的，再变成字符串类型的。关于数据类型我们接下来再讲。

数据类型
计算机可以处理非常多的东西，不止是数学运算，也可以处理视频、文本、图形等数据，在处理不同类型的数据时，要使用不同的数据类型。
就像JPG格式代表图片，AVI代表视频一样。

整数类型
Python可以处理任何大小的整数，当然也包括了负整数，如1,0,-1,1000等。（我们只讨论十进制的数字，关于二进制，八进制，十六进制，可以私下了解）
对于位数很长的数，例如10000000000，很难数清楚0的个数。Python允许在数字中间以_（下划线）分隔，因此，写成10_000_000_000和10000000000是完全一样的。

浮点数类型
浮点数就是我们常说的小数。比如1.23，-2.1等。
对于很大或很小的浮点数，在数学上就要用科学计数法来表示，在Python中，我们把10用e替代，1.23x109就是1.23e9，或者12.3e8，0.000012可以写成1.2e-5。

字符串类型
字符串是以单引号'或双引号"括起来的文本，比如'abc'，"xyz"等等。
请注意，''或""本身只是一种表示方式，让你能知道这是一个字符串，但不是字符串的一部分。
因此，字符串'abc'只有a，b，c这3个字符。如果'本身也是一个字符，那就可以用""括起来，比如"I'm OK"包含的字符是I，'，m，空格，O，K这6个字符。
（考虑转义讲不讲）
还有一个更特殊的是三引号'''或"""，三引号和单/双引号的区别是在于，单/双引号只能单行显示，比如"I'm OK"就是一行就显示完了。
三引号可以多行显示
例如：
'''line1
line2
line3'''
为啥会有三引号呢，是为了方便在文本过长的时候，一个屏幕写不下，就可以用三引号来换行显示。

布尔值类型
布尔值是用来代表真假，在Python中，用True来代表真，用False来代表假，注意大小写，如果是小写的true或false就不对了。
真假主要用来判断给出的条件是真是假，比如3>2，在Python中，你输入这个条件，你获取到的结果是True，因为这个条件是真的。
如果你输入的条件是2>3，那么你就会得到False，因为这个条件很明显是假的。

空值类型
空值是Python里一个特殊的类型，用None表示。None不能理解为0，因为0是有意义的，是一个数字类型，而None是一个特殊的空值，代表是空。

关于其他的类型，比如列表，字典等，我们后面会讲到，先了解这些简单的类型。

介绍完了变量和数据类型，我们把它们结合到一起来看一下。
比如： a=10， b="ABC", c=True
我们分别创建了三个变量a,b,c，a变量代表了数字10，b变量代表了字符串"ABC"，c代表了变量False。
现在的话，我们可以在程序的其他地方使用这三个变量，使用的时候，a变量就代表了10。
例如：
a=1
b=2
c=a+b
我们创建了a变量代表数字1，b变量代表了数字2，c变量等a变量加b变量。
从程序上我们看到，想知道c变量代表a变量加b变量的结果，那么我们就知道c应该等于数字1加上数字2，也就是等于3。
这就是变量的最简单的应用。



注释
就像是在读书的时候，我们在不懂的地方，会写一些自己的理解，方便我们再次去复习阅读的时候，能一下子去理解。
在Python中，注释就是这样的作用。
我们用两种方法来进行注释。
第一种，#符号，例如：
# 这是一个注释
a = 1
b = 2 # 创建了一个变量b，值为2。
我们可以看到，我们以#符号开头，写一条注释，然后创建了a和b两个变量，并在变量b后面又写了一条注释。
在Python程序执行的时候，在遇到#符号开头的文本时，会直接跳过#符号后面的文本。
我们就可以以这种形式，来不断的注释一下我们的代码。比如我们写了一个很复杂程序，我们可以写一个好的注释，以便别人在看我们代码的时候，能理解我们是怎么去写的这段代码。

我们可以看到，#符号的注释只能进行单行注释。我们也可以进行多行注释
第二种，三引号。
上面我们讲过三引号，它是字符串的一种表达形式，在这里，我们也可以用来进行多行注释。例如：
"""这是一个注释
这是注释的第二行
这是注释的第三行"""

单行注释，我们主要是用来标记某一个语句的意思，为什么这样写。
多行注释，我们主要用来在程序文件的开头进行说明，说明我们这个程序文件都有什么功能，如何使用。


缩进
python最具特色的就是使用缩进来表示代码块，不需要使用大括号 {}，其他的语言如Java是这样的。
缩进有两种，一种是空格，一种是Tab（键盘上，大小写切换键上面的那个键）。
同一个文件中的程序必须要使用同一种缩进，这里我们在Pycharm软件中去使用的时候，只使用Tab，因为空格很难去控制个数。



运算符
从一个数学算式来举例：
4 + 5 = 9
4和5是加数和被加数，也可以叫操作数，+号就是我们说的运算符，若干个操作数通过不同的运算符，可以得到不同的结果。
接下来，我们只讲一些常用的运算符。

算术运算符
我们先假设变量a = 10,变量b = 21
先看下面的算术运算符的表格
运算符		描述											实例
+			加 - 两个对象相加								a + b 输出结果 31
-			减 - 得到负数或是一个数减去另一个数				a - b 输出结果 -11
*			乘 - 两个数相乘或是返回一个被重复若干次的字符串	a * b 输出结果 210
/			除 - x 除以 y									b / a 输出结果 2.1
**			幂 - 返回x的y次幂								a**b 为10的21次方
%			取模 - 返回除法的余数							b % a 输出结果 1
//			取整除 - 向下取接近商的整数						>>> 9//2	4		>>> -9//2		-5

加法+，减法-，相信这两个大家一眼就能看出来，我就不讲了。
在Python中，乘法的运算符是*，除法的运算符是/(要注意一点的是，我们在讲的一直是Python3的版本，所以哪怕我们使用2/1，得到的也是浮点数2.0，而不是整数2，在Python2中得到的是整数，了解一下就好)
两个**代表幂运算，就是次方运算，2**1就是2的1次方，也就是2。2**2就是2的2次方，也就是4。
接下来我们讲一下比较麻烦的两个算术运算符，取整除和取模。
我们先说一个数学算式：
9 / 4 = 2 ... 1
这个数学算式我们可以这样去说，9除以4，商是2，余数为1。
那么取模运算呢，就是取这个余数，余数是几，结果就是几，那么9%4=1
取整除去处呢，就是取这个商，商是几，结果就是几，那么9//4=2






































